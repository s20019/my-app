{"version":3,"sources":["LikeButton.jsx","Article.jsx","reportWebVitals.js","App.jsx","Joke.jsx","index.js"],"names":["LikeButton","props","id","count","Article","title","htmlFor","type","checked","isPublished","onClick","toggle","reportWebVitals","React","Component","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Joke","URI","state","jokes","window","fetch","this","res","json","data","setState","setup","punchline","catch","console","log","className","set","punch","SetView","PunchView","ReloadButton","Button","variant","event","location","reload","GoodButton","useState","counter","color","alert","BudButton","MaleImage","src","width","height","alt","FemaleImage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAMeA,EAJI,SAAAC,GACjB,OAAO,yBAAQC,GAAG,UAAX,2CAA2BD,EAAME,UCgB3BC,EAhBC,SAAAH,GACd,OACE,gCACE,6BAAKA,EAAMI,QACX,uBAAOC,QAAQ,QAAf,4CACA,uBACEC,KAAK,WACLC,QAASP,EAAMQ,YACfP,GAAG,QACHQ,QAAS,kBAAMT,EAAMU,YAEvB,cAAC,EAAD,CAAYR,MAAOF,EAAME,YCFhBS,GCTIC,IAAMC,UDHD,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,eEHRQ,G,wDACJ,WAAatB,GAAQ,IAAD,8BAClB,cAAMA,IACDuB,IAAM,qDACX,EAAKC,MAAQ,CAAEC,MAAO,IAHJ,E,qDAMpB,WAAsB,IAAD,OACnBC,OACGC,MAAMC,KAAKL,KACXP,MAAK,SAAAa,GAAG,OAAIA,EAAIC,UAChBd,MAAK,SAAAe,GAAI,OACR,EAAKC,SAAS,CAAEC,MAAOF,EAAKE,MAAOC,UAAWH,EAAKG,eAEpDC,MAAMC,QAAQC,O,oBAGnB,WACE,OACE,qCACE,6CACA,sBAAKC,UAAU,YAAf,UACE,cAAC,EAAD,CAASC,IAAKX,KAAKJ,MAAMS,QACzB,cAAC,EAAD,IACA,cAAC,EAAD,CAAWO,MAAOZ,KAAKJ,MAAMU,YAC7B,cAAC,EAAD,OAEF,sBAAKI,UAAU,SAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,CAAcA,UAAU,oB,GAhCf1B,IAAMC,YAwCnB4B,EAAU,SAAAzC,GACd,OAAO,oDAAQA,EAAMuC,QAGjBG,EAAY,SAAA1C,GAChB,OAAO,oDAAQA,EAAMwC,UAIjBG,EAAe,SAAA3C,GAEnB,OACE,cAAC4C,EAAA,EAAD,CAAQC,QAAQ,YAAYpC,QAFV,SAAAqC,GAAK,OAAIpB,OAAOqB,SAASC,UAE3C,6BAOEC,EAAa,SAAAjD,GAAU,IAAD,EACDY,IAAMsC,SAAS,GADd,mBACnBhD,EADmB,KACZiD,EADY,KAU1B,OACE,eAACP,EAAA,EAAD,CAAQC,QAAQ,YAAYO,MAAM,UAAU3C,QAT1B,SAAAqC,GACH,IAAV5C,EAAgBA,EAAQ,KAAO,GAClCiD,EAAQjD,EAAQ,GAChBwB,OAAO2B,MAAM,iBAAmBnD,EAAQ,WAExCiD,EAAQjD,EAAQ,IAIlB,mCACUA,MAMRoD,EAAY,SAAAtD,GAAU,IAAD,EACAY,IAAMsC,SAAS,GADf,mBAClBhD,EADkB,KACXiD,EADW,KAUzB,OACE,eAACP,EAAA,EAAD,CAAQC,QAAQ,YAAYO,MAAM,YAAY3C,QAT5B,SAAAqC,GACH,IAAV5C,EAAgBA,EAAQ,KAAO,GAClCiD,EAAQjD,EAAQ,GAChBwB,OAAO2B,MAAM,iBAAmBnD,EAAQ,WAExCiD,EAAQjD,EAAQ,IAIlB,kCACSA,MAMPqD,EAAY,SAAAvD,GAChB,OACE,qBACEwD,IAAI,0CACJC,MAAM,MACNC,OAAO,MACPC,IAAI,WAKJC,EAAc,SAAA5D,GAClB,OACE,qBACEwD,IAAI,4CACJC,MAAM,MACNC,OAAO,MACPC,IAAI,WAKKrC,ICjHfuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BtD,M","file":"static/js/main.6fe5c94a.chunk.js","sourcesContent":["import React from 'react'\n\nconst LikeButton = props => {\n  return <button id='counter'>いいね数：{props.count}</button>\n}\n\nexport default LikeButton\n","import React from 'react'\nimport LikeButton from './LikeButton'\n\nconst Article = props => {\n  return (\n    <div>\n      <h2>{props.title}</h2>\n      <label htmlFor='check'>公開状態：</label>\n      <input\n        type='checkbox'\n        checked={props.isPublished}\n        id='check'\n        onClick={() => props.toggle()}\n      />\n      <LikeButton count={props.count} />\n    </div>\n  )\n}\n\nexport default Article\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport Article from './Article'\n\nclass Blog extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isPulished: false,\n      count: 0\n    }\n  }\n\n  componentDidMount () {\n    document.getElementById('counter').addEventListener('click', this.countUp)\n  }\n\n  componentDidUpdate () {\n    console.log(this.state.count)\n    if (this.state.count >= 10) {\n      this.setState({ count: 0 })\n    }\n  }\n\n  componentWillUnmount () {\n    document\n      .getElementById('counter')\n      .removeEventListener('click', this.countUp)\n  }\n\n  togglePublished = () => {\n    this.setState({\n      isPublished: !this.state.isPublished\n    })\n  }\n\n  countUp = () => {\n    this.setState({ count: this.state.count + 1 })\n  }\n\n  render () {\n    return (\n      <>\n        <Article\n          title='Reactの使い方'\n          isPublished={this.state.isPublished}\n          toggle={() => this.togglePublished()}\n          count={this.state.count}\n        />\n      </>\n    )\n  }\n}\n\nexport default Blog\n","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport './Joke.css'\n\nclass Joke extends React.Component {\n  constructor (props) {\n    super(props)\n    this.URI = 'https://official-joke-api.appspot.com/jokes/random'\n    this.state = { jokes: [] }\n  }\n\n  componentDidMount () {\n    window\n      .fetch(this.URI)\n      .then(res => res.json())\n      .then(data =>\n        this.setState({ setup: data.setup, punchline: data.punchline })\n      )\n      .catch(console.log)\n  }\n\n  render () {\n    return (\n      <>\n        <h1>JOKE GETTER</h1>\n        <div className='container'>\n          <SetView set={this.state.setup} />\n          <FemaleImage />\n          <PunchView punch={this.state.punchline} />\n          <MaleImage />\n        </div>\n        <div className='button'>\n          <GoodButton />\n          <BudButton />\n        </div>\n        <div className='reload'>\n          <ReloadButton className='reload' />\n        </div>\n      </>\n    )\n  }\n}\n\n/* ジョーク部分 */\nconst SetView = props => {\n  return <h2>フリ：{props.set}</h2>\n}\n\nconst PunchView = props => {\n  return <h2>オチ：{props.punch}</h2>\n}\n\n/* リロードボタン */\nconst ReloadButton = props => {\n  const refreshPage = event => window.location.reload()\n  return (\n    <Button variant='contained' onClick={refreshPage}>\n      One More Joke!\n    </Button>\n  )\n}\n\n/* グッドボタン */\nconst GoodButton = props => {\n  const [count, counter] = React.useState(0)\n  const handleClick = event => {\n    if ((count !== 0) & (count % 10 === 0)) {\n      counter(count + 1)\n      window.alert('Thank you for ' + count + ' likes')\n    } else {\n      counter(count + 1)\n    }\n  }\n  return (\n    <Button variant='contained' color='primary' onClick={handleClick}>\n      Good👍：{count}\n    </Button>\n  )\n}\n\n/* バッドボタン */\nconst BudButton = props => {\n  const [count, counter] = React.useState(0)\n  const handleClick = event => {\n    if ((count !== 0) & (count % 10 === 0)) {\n      counter(count + 1)\n      window.alert('Thank you for ' + count + ' hates')\n    } else {\n      counter(count + 1)\n    }\n  }\n  return (\n    <Button variant='contained' color='secondary' onClick={handleClick}>\n      Bud👎：{count}\n    </Button>\n  )\n}\n\n/* 人物の画像をランダムに返す */\nconst MaleImage = props => {\n  return (\n    <img\n      src='https://joeschmoe.io/api/v1/male/random'\n      width='200'\n      height='200'\n      alt='human'\n    />\n  )\n}\n\nconst FemaleImage = props => {\n  return (\n    <img\n      src='https://joeschmoe.io/api/v1/female/random'\n      width='200'\n      height='200'\n      alt='human'\n    />\n  )\n}\n\nexport default Joke\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport Blog2 from './Blog2'\nimport Joke from './Joke'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Joke />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}